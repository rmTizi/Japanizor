@page "/jlpt5"
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<div class="d-flex justify-content-center">
    <div>
        @if (loading)
        {
            <p class="text-center">Loading...</p>
            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
                     aria-valuenow="100" aria-valuemin="0"
                     aria-valuemax="100" style="width: 75%"></div>
            </div>
        }
        @if (session?.Current != null)
        {
            <p class="text-center text-muted">Word @current of @total </p>
            <form @onsubmit="CheckWord">
                <h4 class="text-center">&nbsp;@session.Current.Kana</h4>
                <h3 class="text-center">&nbsp;@session.Current.Kanji</h3>
                <p class="text-center">
                    @if (!showError && !showTranslation)
                    {
                        <div class="alert alert-dark">&nbsp;</div>
                    }
                    else if (showError)
                    {
                        <div class="alert alert-danger">Try again</div>
                    }
                    else if (showTranslation)
                    {
                        <div class="alert alert-dark">@session.Current.Translation</div>
                    }
                </p>
                <p class="text-center">
                    <input id="romajiInput" autocomplete="off" spellcheck="false"
                           @bind-value="@romaji" />
                </p>
                <p class="text-center">
                    @if (!showTranslation)
                    {
                        <button class="btn btn-primary">Check</button>
                    }
                    else
                    {
                        <button class="btn btn-success" @onclick="NextWord">Next</button>
                    }
                </p>
            </form>
        }
    </div>
</div>

@code {
    private int total = 0;
    private int current = 0;
    private bool loading = true;
    private bool showError = false;
    private bool showTranslation = false;
    private string romaji = string.Empty;
    private Jword[] words;
    private IEnumerator<Jword> session;

    protected override async Task OnInitializedAsync()
    {
        words = await Http.GetFromJsonAsync<Jword[]>("sample-data/jlpt5.json");
        Randomizer.Randomize(words);

        session = words.AsEnumerable().GetEnumerator();
        session.MoveNext();
        loading = false;
        total = words.Length;
        current = 1;
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            JsRuntime.InvokeAsync<string>("SetFocus", "romajiInput");
        }
        return base.OnAfterRenderAsync(firstRender);
    }

    private void NextWord()
    {
        showError = false;
        showTranslation = false;
        romaji = string.Empty;
        session.MoveNext();
        current++;
    }

    private void CheckWord()
    {
        if (romaji == session.Current.Romaji)
        {
            showError = false;
            showTranslation = true;
        }
        else
        {
            showError = true;
            showTranslation = false;
        }
        romaji = string.Empty;
    }
}
